name: CRD Version Updater

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      crd_alertmanagerconfigs:
        type: boolean
        default: false
      crd_alertmanagers:
        type: boolean
        default: false
      crd_podmonitors:
        type: boolean
        default: false
      crd_probes:
        type: boolean
        default: false
      crd_prometheuses:
        type: boolean
        default: false
      crd_prometheusrules:
        type: boolean
        default: false
      crd_scrapeconfigs:
        type: boolean
        default: false
      crd_servicemonitors:
        type: boolean
        default: false
      crd_thanosrulers:
        type: boolean
        default: false

jobs:
  data-fetch:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
            ref: ${{ github.head_ref }}
            fetch-depth: 0 

      - name: sort
        run: |
          declare -A input_values=(
            ["alertmanagerconfigs"]=${{ inputs.crd_alertmanagerconfigs }}
            ["alertmanagers"]=${{ inputs.crd_alertmanagers }}
            ["podmonitors"]=${{ inputs.crd_podmonitors }}
            ["probes"]=${{ inputs.crd_probes }}
            ["prometheuses"]=${{ inputs.crd_prometheuses }}
            ["prometheusrules]=${{ inputs.crd_prometheusrules }}
            ["scrapeconfigs]=${{ inputs.crd_scrapeconfigs }}
            ["servicemonitors"]=${{ inputs.crd_servicemonitors }}
            ["thanosrulers"]=${{ inputs.crd_thanosrulers }}
          )

          for key in "${!input_values[@]}"; do
            if [ "${input_values[$key]}" == true ]; then
              echo "set to true: $key"
              curl -sS https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v${{ inputs.version }}/example/prometheus-operator-crd/monitoring.coreos.com_"$key".yaml > "crd_$key.yaml"
            fi
          done
        
      - name: check changes
        id: check_changes
        run: |
            if [[ -n "$(git status --porcelain)" ]]; then
              echo "There are changes."
              echo "has_changes=true" >> $GITHUB_ENV
            else
              echo "No changes detected. Exiting."
              echo "has_changes=false" >> $GITHUB_ENV
              exit 0
            fi

      - name: Commit Changes
        if: env.has_changes == 'true'
        run: |
          git config --global user.email "stanleyikegwuonu@gmail.com"
          git config --global user.name "jstan-isch"
          git add -A
          git commit -m "crd version update - v${{ inputs.version }}"
          git push
          # git push origin HEAD

      # - name: commit the data
      #   uses: EndBug/add-and-commit@v9 
      #   with: 
      #     message: 'Version update ${{ inputs.version }}'
